@mixin cover-image($name) {
  background: center top no-repeat;
  background-size: cover;

  .core & {
    background-image: url('../images/d-#{$name}-960.jpg');
    // Path is relative to the document, not stylesheet
    -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='images/d-#{$name}-960.jpg', sizingMethod='scale')";
  }

  .enhanced & {
    @include mq($until: 'medium', $and: '(orientation: portrait)') {
      background-image: url('../images/m-#{$name}-640.jpg');
    }

    @include mq($until: 'medium', $and: '(orientation: landscape)') {
      background-image: url('../images/d-#{$name}-960.jpg');
    }

    // Background texture only
    @include mq($from: 'medium', $and: '(orientation: portrait)') {
      background-image: url('../images/m-#{$name}-1050.jpg');
    }

    @include mq($from: 'medium', $and: '(orientation: landscape)') {
      background-image: url('../images/d-#{$name}-1600.jpg');
    }

    &.js-lazy-load {
      background-image: none !important;
    }
  }

}

.cover {
  position: relative;
  min-height: 100%;

  @media screen and (min-height: 480px) {
    height: 100vh;
  }
}

.cover__content {
  display: table;
  width: 100%;
  height: 100%;
}

.cover__content__wrapper {
  @extend %layout-padding;
  display: table-cell;
}

.cover__image {
  @include cover-image('hero');
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  width: 100%;
  height: 100%;

  .enhanced & {
    // No easy background-attachment: fixed on iOS
    position: fixed;
    // Viewport size changes when browser chrome moves in/out of view.
    // therefore a % based height would mean extra reflows.
    height: 100vh;
    // Forcing hardware acceleration means this won't get re-painted all the
    // time. This even extends below the viewport so when the browser chrome
    // is hidden we don't get ugly gaps that need to be painted.
    transform: translate3d(0, 0, 0);
  }

}

.cover__image__mask {
  .enhanced & {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(#232322, 0.9);
    opacity: 0;
    transition: opacity 0.1s;
    will-change: opacity;
  }
}

.cover--outside {
  color: #ffffff;

  .cover__content__wrapper {
    // Allow for abs. positioned masthead
    padding-top: 100px;
    vertical-align: bottom;
  }
}

.cover--inside {
  color: #ffffff;
  background: #333333;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.75);

  .enhanced & {
    background: none;
  }

  .cover__content__wrapper {
    vertical-align: middle;
    text-align: center;
  }
}
